<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smile2coder.dao.MOrderGoodsMapper">
    <resultMap id="BaseResultMap" type="com.smile2coder.model.MOrderGoods">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="order_id" jdbcType="INTEGER" property="orderId"/>
        <result column="goods_id" jdbcType="INTEGER" property="goodsId"/>
        <result column="goods_name" jdbcType="VARCHAR" property="goodsName"/>
        <result column="pay_price" jdbcType="DECIMAL" property="payPrice"/>
        <result column="actual_price" jdbcType="DECIMAL" property="actualPrice"/>
        <result column="count" jdbcType="INTEGER" property="count"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, order_id, goods_id, goods_name, pay_price, actual_price, count, create_time,
    update_time, status
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from m_order_goods
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from m_order_goods
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.smile2coder.model.MOrderGoods">
        insert into m_order_goods (id, order_id, goods_id,
                                   goods_name, pay_price, actual_price,
                                   count, create_time, update_time,
                                   status)
        values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER},
                #{goodsName,jdbcType=VARCHAR}, #{payPrice,jdbcType=DECIMAL}, #{actualPrice,jdbcType=DECIMAL},
                #{count,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
                #{status,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective" parameterType="com.smile2coder.model.MOrderGoods">
        insert into m_order_goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="orderId != null">
                order_id,
            </if>
            <if test="goodsId != null">
                goods_id,
            </if>
            <if test="goodsName != null">
                goods_name,
            </if>
            <if test="payPrice != null">
                pay_price,
            </if>
            <if test="actualPrice != null">
                actual_price,
            </if>
            <if test="count != null">
                count,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=INTEGER},
            </if>
            <if test="goodsId != null">
                #{goodsId,jdbcType=INTEGER},
            </if>
            <if test="goodsName != null">
                #{goodsName,jdbcType=VARCHAR},
            </if>
            <if test="payPrice != null">
                #{payPrice,jdbcType=DECIMAL},
            </if>
            <if test="actualPrice != null">
                #{actualPrice,jdbcType=DECIMAL},
            </if>
            <if test="count != null">
                #{count,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.smile2coder.model.MOrderGoods">
        update m_order_goods
        <set>
            <if test="orderId != null">
                order_id = #{orderId,jdbcType=INTEGER},
            </if>
            <if test="goodsId != null">
                goods_id = #{goodsId,jdbcType=INTEGER},
            </if>
            <if test="goodsName != null">
                goods_name = #{goodsName,jdbcType=VARCHAR},
            </if>
            <if test="payPrice != null">
                pay_price = #{payPrice,jdbcType=DECIMAL},
            </if>
            <if test="actualPrice != null">
                actual_price = #{actualPrice,jdbcType=DECIMAL},
            </if>
            <if test="count != null">
                count = #{count,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.smile2coder.model.MOrderGoods">
        update m_order_goods
        set order_id     = #{orderId,jdbcType=INTEGER},
            goods_id     = #{goodsId,jdbcType=INTEGER},
            goods_name   = #{goodsName,jdbcType=VARCHAR},
            pay_price    = #{payPrice,jdbcType=DECIMAL},
            actual_price = #{actualPrice,jdbcType=DECIMAL},
            count        = #{count,jdbcType=INTEGER},
            create_time  = #{createTime,jdbcType=TIMESTAMP},
            update_time  = #{updateTime,jdbcType=TIMESTAMP},
            status       = #{status,jdbcType=TINYINT}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectByOrderId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List">
        </include>
        from m_order_goods where order_id = #{orderId}
    </select>
</mapper>